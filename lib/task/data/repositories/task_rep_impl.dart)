import '../datasource/task_datasource.dart';
import '../../domain/entities/task_entity.dart';
import '../../domain/repositories/task_rep.dart';

class TaskRepImpl implements TaskRep {
  final TaskDataSource ds;

  TaskRepImpl({required this.ds});

  @override
  Future<int> insertTask(TaskEntity task) async {
    return await ds.insertTask(task);
  }

  @override
  Future<List<TaskEntity>> getAllTasks() async {
    final models = await ds.getAllTasks();
    return models
        .map((m) => TaskEntity(
              id: m.id,
              title: m.title,
              description: m.description,
              date: m.date,
              status: m.status,
            ))
        .toList();
  }

  @override
  Future<TaskEntity?> getTaskById(int id) async {
    final model = await ds.getTaskById(id);
    if (model == null) return null;
    return TaskEntity(
      id: model.id,
      title: model.title,
      description: model.description,
      date: model.date,
      status: model.status,
    );
  }

  @override
  Future<int> updateTask(TaskEntity task) async {
    return await ds.updateTask(task);
  }

  @override
  Future<int> deleteTask(int id) async {
    return await ds.deleteTask(id);
  }
}
